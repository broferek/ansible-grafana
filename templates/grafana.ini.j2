##################### Grafana Configuration Example #####################
#
# Everything has defaults so you only need to uncomment things you want to
# change

# possible values : production, development
app_mode = production

# instance name, defaults to HOSTNAME environment variable value or hostname if HOSTNAME var is empty
instance_name = {{ grafana_instance_name }}

#################################### Paths ####################################
[paths]
# Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
data = {{ grafana_data_dir }}

# Temporary files in `data` directory older than given duration will be removed
temp_data_lifetime = {{ grafana_temp_data_lifetime }}

# Directory where grafana can store logs
logs = {{ grafana_log_dir }}

# Directory where grafana will automatically scan and look for plugins
plugins = {{ grafana_data_dir }}/plugins

# folder that contains provisioning config files that grafana will apply on startup and while running.
provisioning = {{ grafana_provisioning_dir }}

#################################### Server ####################################
[server]
# Protocol (http or https)
protocol = {{ grafana_server_protocol }}

# The ip address to bind to, empty will bind to all interfaces
http_addr = {{ grafana_server_http_addr|default('') }}

# The http port  to use
http_port = {{ grafana_server_http_port }}

# The public facing domain name used to access grafana from a browser
domain = {{ grafana_server_domain }}

# Redirect to correct domain if host header does not match domain
# Prevents DNS rebinding attacks
enforce_domain = {{ grafana_server_enforce_domain|default(false)|bool|lower }}

# The full public facing url you use in browser, used for redirects and emails
# If you use reverse proxy and sub path specify full url (with sub path)
root_url = {{ grafana_server_root_url }}

# Log web requests
router_logging = {{ grafana_server_router_logging|default(false)|bool|lower }}

# the path relative working path
static_root_path = {{ grafana_server_static_root_path }}

# enable gzip
enable_gzip = {{ grafana_server_enable_gzip|default(false)|bool|lower }}

# https certs & key file
cert_file = {{ grafana_server_cert_file|default('') }}
cert_key = {{ grafana_server_cert_key|default('') }}

# Unix socket path
socket = {{ grafana_server_unix_socket_path|default('') }}

#################################### Database ####################################
[database]
# You can configure the database connection by specifying type, host, name, user and password
# as separate properties or as on string using the url properties.

{% if grafana_database_url is not defined %}
# Either "mysql", "postgres" or "sqlite3", it's your choice
type = {{ grafana_database_type|default('sqlite3') }}
host = {{ grafana_database_host|default('127.0.0.1:3306') }}
name = {{ grafana_database_name|default('grafana') }}
user = {{ grafana_database_user|default('root') }}
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
password = {{ grafana_database_password|default('') }}
{% else %}
# Use either URL or the previous fields to configure the database
# Example: mysql://user:secret@host:port/database
url = {{ grafana_database_url|default('') }}
{% endif %}

# For "postgres", use either "disable", "require" or "verify-full"
ssl_mode = {{ grafana_database_ssl_mode|default('disable') }}

{% if grafana_database_ssl_mode and grafana_database_ssl_mode != 'disable' and grafana_database_type == 'mysql' %}
ca_cert_path     = {{ grafana_database_ca_cert_path|default('/etc/ssl/certs') }}
client_key_path  = {{ grafana_database_client_key_path|default('') }}
client_cert_path = {{ grafana_database_client_cert_path|default('') }}
{% if grafana_ssl-mode != 'skip-verify' %}
server_cert_name = {{ grafana_database_server_cert_name|default('') }}
{% endif %}

{% endif %}
{% if grafana_database_type == 'sqlite3' %}
# For "sqlite3" only, path relative to data_path setting
path = {{ grafana_database_path|default('grafana.db') }}
{% endif %}

# Max idle conn setting default is 2
max_idle_conn = {{ grafana_database_max_idle_conn }}

# Max conn setting default is 0 (mean not set)
max_open_conn = {{ grafana_database_max_open_conn|default('') }}

# Connection Max Lifetime default is 14400 (means 14400 seconds or 4 hours)
conn_max_lifetime = {{ grafana_database_conn_max_lifetime }}

# Set to true to log the sql calls and execution times.
log_queries = {{ grafana_database_log_queries|default('') }}

{% if grafana_database_type == 'sqlite3' %}
# For "sqlite3" only. cache mode setting used for connecting to the database. (private, shared)
cache_mode = {{ grafana_database_cache_mode }}
{% endif %}

#################################### Cache server #############################
[remote_cache]
# Either "redis", "memcached" or "database" default is "database"
type = {{ grafana_cache_server_type }}

# cache connectionstring options
# database: will use Grafana primary database.
# redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=grafana`
# memcache: 127.0.0.1:11211
connstr = {{ grafana_cache_server_connection_string|default('') }}

#################################### Data proxy ###########################
[dataproxy]

# This enables data proxy logging, default is false
logging = {{ grafana_data_proxy_logging }}

# How long the data proxy should wait before timing out default is 30 (seconds)
timeout = {{ grafana_data_proxy_timeout }}

# If enabled and user is not anonymous, data proxy will add X-Grafana-User header with username into the request, default is false.
send_user_header = {{ grafana_data_proxy_send_user_header }}

#################################### Analytics ####################################
[analytics]
# Server reporting, sends usage counters to stats.grafana.org every 24 hours.
# No ip addresses are being tracked, only simple counters to track
# running instances, dashboard and error counts. It is very helpful to us.
# Change this option to false to disable reporting.
reporting_enabled = {{ grafana_analytics_reporting_enabled|default(true)|bool|lower }}

# Set to false to disable all checks to https://grafana.net
# for new vesions (grafana itself and plugins), check is used
# in some UI views to notify that grafana or plugin update exists
# This option does not cause any auto updates, nor send any information
# only a GET request to http://grafana.net to get latest versions
check_for_updates = {{ grafana_analytics_check_for_updates|default(true)|bool|lower }}

# Google Analytics universal tracking code, only enabled if you specify an id here
google_analytics_ua_id = {{ grafana_analytics_google_analytics_ua_id|default('') }}

# Google Tag Manager ID, only enabled if you specify an id here
google_tag_manager_id = {{ grafana_analytics_google_tag_manager_id|default('') }}

#################################### Security ####################################
[security]
# default admin user, created on startup
admin_user = {{ grafana_security_admin_user|default('admin') }}

# default admin password, can be changed before first start of grafana,  or in profile settings
admin_password = {{ grafana_security_admin_password|default('admin') }}

# used for signing
secret_key = {{ grafana_security_secret_key }}

# disable gravatar profile images
disable_gravatar = {{ grafana_security_disable_gravatar|default(false)|bool|lower }}

# data source proxy whitelist (ip_or_domain:port separated by spaces)
data_source_proxy_whitelist = {{ grafana_security_data_source_proxy_whitelist|default('') }}

# disable protection against brute force login attempts
disable_brute_force_login_protection = {{ grafana_security_disable_brute_force_login_protection|default(false)|bool|lower }}

# set to true if you host Grafana behind HTTPS. default is false.
cookie_secure = {{ grafana_security_cookie_secure }}

# set cookie SameSite attribute. defaults to `lax`. can be set to "lax", "strict" and "none"
cookie_samesite = {{ grafana_security_cookie_samesite }}

# set to true if you want to allow browsers to render Grafana in a <frame>, <iframe>, <embed> or <object>. default is false.
allow_embedding = {{ grafana_security_allow_embedding|default(false)|bool|lower }}

#################################### Snapshots ###########################
[snapshots]
# snapshot sharing options
external_enabled = {{ grafana_snapshots_external_enabled|default(true)|bool|lower }}
external_snapshot_url = {{ grafana_snapshots_external_snapshot_url }}
external_snapshot_name = {{ grafana_snapshots_external_snapshot_name }}

# remove expired snapshot
snapshot_remove_expired = {{ grafana_snapshots_remove_expired|default(true)|bool|lower }}

#################################### Dashboards History ##################
[dashboards]
# Number dashboard versions to keep (per dashboard). Default: 20, Minimum: 1
versions_to_keep = {{ grafana_dashboard_history_versions_to_keep }}

#################################### Users ####################################
[users]
# disable user signup / registration
allow_sign_up = {{ grafana_users_allow_sign_up|default(true)|bool|lower }}

# Allow non admin users to create organizations
allow_org_create = {{ grafana_users_allow_org_create|default(true)|bool|lower }}

# Set to true to automatically assign new users to the default organization (id 1)
auto_assign_org = {{ grafana_users_auto_assign_org|default(true)|bool|lower }}

# Default role new users will be automatically assigned (if disabled above is set to true)
auto_assign_org_role = {{ grafana_users_auto_assign_org_role }}

# Background text for the user field on the login page
login_hint = {{ grafana_users_login_hint }}
password_hint = {{ grafana_users_password_hint }}

# Default UI theme ("dark" or "light")
default_theme = {{ grafana_users_default_theme }}

# External user management, these options affect the organization users view
external_manage_link_url = {{ grafana_users_external_manage_link_urk|default('') }}
external_manage_link_name = {{ grafana_users_external_manage_link_name|default('') }}
external_manage_info = {{ grafana_users_external_manage_info|default('') }}

# Viewers can edit/inspect dashboard settings in the browser. But not save the dashboard.
viewers_can_edit = {{ grafana_users_viewers_can_edit|defaulf(false)|bool|lower }}

# Editors can administrate dashboard, folders and teams they create
editors_can_admin = {{ grafana_users_editors_can_admin|defaulf(false)|bool|lower }}

[auth]
# Login cookie name
login_cookie_name = {{ grafana_users_auth_login_cookie_name }}

# The lifetime (days) an authenticated user can be inactive before being required to login at next visit. Default is 7 days,
login_maximum_inactive_lifetime_days = {{ grafana_users_auth_login_maximum_inactive_lifetime_days }}

# The maximum lifetime (days) an authenticated user can be logged in since login time before being required to login. Default is 30 days.
login_maximum_lifetime_days = {{ grafana_users_auth_login_maximum_lifetime_days }}

# How often should auth tokens be rotated for authenticated users when being active. The default is each 10 minutes.
token_rotation_interval_minutes = {{ grafana_users_auth_token_rotation_interval_minutes }}

# Set to true to disable (hide) the login form, useful if you use OAuth, defaults to false
disable_login_form = {{ grafana_users_auth_disable_login_form|defaulf(false)|bool|lower }}

# Set to true to disable the signout link in the side menu. useful if you use auth.proxy, defaults to false
disable_signout_menu = {{ grafana_users_auth_disable_signout_menu|defaulf(false)|bool|lower }}

# URL to redirect the user to after sign out
signout_redirect_url = {{ grafana_users_auth_signout_redirect_url|default('') }}

# Set to true to attempt login with OAuth automatically, skipping the login screen.
# This setting is ignored if multiple OAuth providers are configured.
oauth_auto_login = {{ grafana_users_auth_oauth_auto_login|defaulf(false)|bool|lower }}

#################################### Anonymous Auth ##########################
[auth.anonymous]
# enable anonymous access
enabled = {{ grafana_auth_anonymous_enabled|default(false)|bool|lower }}

# specify organization name that should be used for unauthenticated users
org_name = {{ grafana_auth_anonymous_org_name }}

# specify role for unauthenticated users
org_role = {{ grafana_auth_anonymous_org_role }}

#################################### Github Auth ##########################
[auth.github]
enabled = {{ grafana_auth_github_enabled|default(false)|bool|lower }}
allow_sign_up = {{ grafana_auth_github_allow_sign_up|default(false)|bool|lower }}
client_id = {{ grafana_auth_github_client_id }}
client_secret = {{ grafana_auth_github_client_secret }}
scopes = {{ grafana_auth_github_scopes }}
auth_url = {{ grafana_auth_github_auth_url }}
token_url = {{ grafana_auth_github_token_url }}
api_url = {{ grafana_auth_github_api_url }}
team_ids = {{ grafana_auth_github_team_ids }}
allowed_organizations = {{ grafana_auth_github_allowed_organizations }}

#################################### Google Auth ##########################
[auth.google]
enabled = {{ grafana_auth_google_enabled|default(false)|bool|lower }}
allow_sign_up = {{ grafana_auth_google_allow_sign_up|default(false)|bool|lower }}
client_id = {{ grafana_auth_google_client_id }}
client_secret = {{ grafana_auth_google_client_secret }}
scopes = {{ grafana_auth_google_scopes }}
auth_url = {{ grafana_auth_google_auth_url }}
token_url = {{ grafana_auth_google_token_url }}
api_url = {{ grafana_auth_google_api_url }}
allowed_domains = {{ grafana_auth_google_allowed_domains }}

#################################### Generic OAuth ##########################
[auth.generic_oauth]
enabled = {{ grafana_auth_oauth_enabled|default(false)|bool|lower }}
name = {{ grafana_auth_oauth_name }}
allow_sign_up = {{ grafana_auth_oauth_allow_sign_up|default(true)|bool|lower }}
client_id = {{ grafana_auth_oauth_client_id }}
client_secret = {{ grafana_auth_oauth_client_secret }}
scopes = {{ grafana_auth_oauth_scopes }}
auth_url = {{ grafana_auth_oauth_auth_url }}
token_url = {{ grafana_auth_oauth_token_url }}
api_url = {{ grafana_auth_oauth_api_url }}
team_ids = {{ grafana_auth_oauth_team_ids|default('') }}
allowed_organizations = {{ grafana_auth_oauth_allowed_organizations|default('') }}
tls_skip_verify_insecure = {{ grafana_auth_oauth_tls_skip_verify_insecure|default(false)|bool|lower }}
tls_client_cert = {{ grafana_auth_oauth_tls_client_cert|default('') }}
tls_client_key = {{ grafana_auth_oauth_tls_client_key|default('') }}
tls_client_ca = {{ grafana_auth_oauth_tls_client_ca|default('') }}

; Set to true to enable sending client_id and client_secret via POST body instead of Basic authentication HTTP header
; This might be required if the OAuth provider is not RFC6749 compliant, only supporting credentials passed via POST payload
send_client_credentials_via_post = {{ grafana_auth_oauth_send_client_credentials_via_post|default(false)|bool|lower }}

#################################### Grafana.com Auth ####################
[auth.grafana_com]
enabled = {{ grafana_auth_enabled|default(false)|bool|lower }}
allow_sign_up = {{ grafana_auth_allow_sign_up|default(true)|bool|lower }}
client_id = {{ grafana_auth_client_id }}
client_secret = {{ grafana_auth_client_secret }}
scopes = {{ grafana_auth_scopes }}
allowed_organizations = {{ grafana_auth_allowed_organizations|default('') }}

#################################### Auth Proxy ##########################
[auth.proxy]
enabled = {{ grafana_auth_proxy_enabled|default(false)|bool|lower }}
header_name = {{ grafana_auth_proxy_header_name }}
header_property = {{ grafana_auth_proxy_header_property }}
auto_sign_up = {{ grafana_auth_proxy_auto_sign_up|default(true)|bool|lower }}
ldap_sync_ttl = {{ grafana_auth_proxy_ldap_sync_ttl }}
whitelist = {{ grafana_auth_proxy_whitelist }}
headers = {{ grafana_auth_proxy_headers }}

#################################### Basic Auth ##########################
[auth.basic]
enabled = {{ grafana_auth_basic_enabled|default(true)|bool|lower }}

#################################### Auth LDAP ##########################
[auth.ldap]
enabled = {{ grafana_auth_ldap_enabled|default(false)|bool|lower }}
config_file = {{ grafana_auth_ldap_config_file }}
allow_sign_up = {{ grafana_auth_ldap_allow_sign_up|default('') }}

#################################### SMTP / Emailing ##########################
[smtp]
enabled = {{ grafana_smtp_enabled|default(false)|bool|lower }}
host = {{ grafana_smtp_host }}
user = {{ grafana_smtp_user }}
# If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
password = {{ grafana_smtp_password }}
cert_file = {{ grafana_smtp_cert_file }}
key_file = {{ grafana_smtp_key_file }}
skip_verify = {{ grafana_smtp_skip_verify|default(false)|bool|lower }}
from_address = {{ grafana_smtp_from_address }}
from_name = {{ grafana_smtp_from_name }}
# EHLO identity in SMTP dialog (defaults to instance_name)
ehlo_identity = {{ grafana_smtp_ehlo_identity }}

[emails]
welcome_email_on_sign_up = {{ grafana_emails_welcome_email_on_sign_up|default(false)|bool|lower }}

#################################### Logging ##########################
[log]
# Either "console", "file", "syslog". Default is console and  file
# Use comma to separate multiple modes, e.g. "console, file"
mode = {{ grafana_log_mode }}

# Either "debug", "info", "warn", "error", "critical", default is "info"
level = {{ grafana_log_level|default('info') }}

# optional settings to set different levels for specific loggers. Ex filters = sqlstore:debug
filters = {{ grafana_log_filers }}

# For "console" mode only
[log.console]
level = {{ grafana_log_console_level|default('') }}

# log line format, valid options are text, console and json
format = {{ grafana_log_console_format }}

# For "file" mode only
[log.file]
level = {{ grafana_log_file_level|default('') }}

# log line format, valid options are text, console and json
format = {{ grafana_log_file_format }}

# This enables automated log rotate(switch of following options), default is true
log_rotate = {{ grafana_log_file_log_rotate|default(true)|bool|lower }}

# Max line number of single file, default is 1000000
max_lines = {{ grafana_log_file_max_lines|int }}

# Max size shift of single file, default is 28 means 1 << 28, 256MB
max_lines_shift = {{ grafana_log_file_max_lines_shift|int }}

# Segment log daily, default is true
daily_rotate = {{ grafana_log_file_daily_rotate|default(true)|bool|lower }}

# Expired days of log file(delete after max days), default is 7
max_days = {{ grafana_log_file_max_days|int }}

[log.syslog]
level = {{ grafana_log_syslog_level|default('') }}

# log line format, valid options are text, console and json
format = {{ grafana_log_syslog_format }}

# Syslog network type and address. This can be udp, tcp, or unix. If left blank, the default unix endpoints will be used.
;network =
;address =

# Syslog facility. user, daemon and local0 through local7 are valid.
;facility =

# Syslog tag. By default, the process' argv[0] is used.
;tag =

#################################### Alerting ############################
[alerting]
# Disable alerting engine & UI features
;enabled = true
# Makes it possible to turn off alert rule execution but alerting UI is visible
;execute_alerts = true

# Default setting for new alert rules. Defaults to categorize error and timeouts as alerting. (alerting, keep_state)
;error_or_timeout = alerting

# Default setting for how Grafana handles nodata or null values in alerting. (alerting, no_data, keep_state, ok)
;nodata_or_nullvalues = no_data

# Alert notifications can include images, but rendering many images at the same time can overload the server
# This limit will protect the server from render overloading and make sure notifications are sent out quickly
;concurrent_render_limit = 5


# Default setting for alert calculation timeout. Default value is 30
;evaluation_timeout_seconds = 30

# Default setting for alert notification timeout. Default value is 30
;notification_timeout_seconds = 30

# Default setting for max attempts to sending alert notifications. Default value is 3
;max_attempts = 3

#################################### Explore #############################
[explore]
# Enable the Explore section
;enabled = true

#################################### Internal Grafana Metrics ##########################
# Metrics available at HTTP API Url /metrics
[metrics]
# Disable / Enable internal metrics
;enabled           = true

# Publish interval
;interval_seconds  = 10

# Send internal metrics to Graphite
[metrics.graphite]
# Enable by setting the address setting (ex localhost:2003)
;address =
;prefix = prod.grafana.%(instance_name)s.

#################################### Distributed tracing ############
[tracing.jaeger]
# Enable by setting the address sending traces to jaeger (ex localhost:6831)
;address = localhost:6831
# Tag that will always be included in when creating new spans. ex (tag1:value1,tag2:value2)
;always_included_tag = tag1:value1
# Type specifies the type of the sampler: const, probabilistic, rateLimiting, or remote
;sampler_type = const
# jaeger samplerconfig param
# for "const" sampler, 0 or 1 for always false/true respectively
# for "probabilistic" sampler, a probability between 0 and 1
# for "rateLimiting" sampler, the number of spans per second
# for "remote" sampler, param is the same as for "probabilistic"
# and indicates the initial sampling rate before the actual one
# is received from the mothership
;sampler_param = 1

#################################### Grafana.com integration  ##########################
# Url used to import dashboards directly from Grafana.com
[grafana_com]
;url = https://grafana.com

#################################### External image storage ##########################
[external_image_storage]
# Used for uploading images to public servers so they can be included in slack/email messages.
# you can choose between (s3, webdav, gcs, azure_blob, local)
;provider =

[external_image_storage.s3]
;bucket =
;region =
;path =
;access_key =
;secret_key =

[external_image_storage.webdav]
;url =
;public_url =
;username =
;password =

[external_image_storage.gcs]
;key_file =
;bucket =
;path =

[external_image_storage.azure_blob]
;account_name =
;account_key =
;container_name =

[external_image_storage.local]
# does not require any configuration

[rendering]
# Options to configure external image rendering server like https://github.com/grafana/grafana-image-renderer
;server_url =
;callback_url =

[enterprise]
# Path to a valid Grafana Enterprise license.jwt file
;license_path =

[panels]
# If set to true Grafana will allow script tags in text panels. Not recommended as it enable XSS vulnerabilities.
;disable_sanitize_html = false

[plugins]
;enable_alpha = false
;app_tls_skip_verify_insecure = false
