# To troubleshoot and get more log info enable ldap debug logging in grafana.ini
{% if grafana_ldap_log_enabled|default(false) %}
[log]
filters = ldap:debug
{% endif %}

[[servers]]
# Ldap server host (specify multiple hosts space separated)
host = "{{ grafana_ldap_servers_host|default('127.0.0.1') }}"
# Default port is 389 or 636 if use_ssl = true
port = {{ grafana_ldap_servers_port|default('389') }}
# Set to true if ldap server supports TLS
use_ssl = {{ grafana_ldap_servers_use_ssl|default(false)|bool|lower }}
# Set to true if connect ldap server with STARTTLS pattern (create connection in insecure, then upgrade to secure connection with TLS)
start_tls = {{ grafana_ldap_servers_start_tls|default(false)|bool|lower }}
# set to true if you want to skip ssl cert validation
ssl_skip_verify = {{ grafana_ldap_servers_ssl_skip_verify|default(false)|bool|lower }}
# set to the path to your root CA certificate or leave unset to use system defaults
# root_ca_cert = /path/to/certificate.crt
{% if grafana_ldap_servers_root_ca_cert|default(false) %}
root_ca_cert = "{{ grafana_ldap_servers_root_ca_cert }}"
{% endif %}
# Authentication against LDAP servers requiring client certificates
{% if grafana_ldap_servers_client_cert|default(false) %}
client_cert = "/path/to/client.crt"
{% endif %}
{% if grafana_ldap_servers_client_key|default(false) %}
client_key = "/path/to/client.key"
{% endif %}

# Search user bind dn
bind_dn = "{{ grafana_ldap_servers_bind_dn }}"
# Search user bind password
# If the password contains # or ; you have to wrap it with triple quotes. Ex """#password;"""
bind_password = '{{ grafana_ldap_servers_bind_password }}'

# User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
search_filter = "{{ grafana_ldap_servers_search_filter }}"

# An array of base dns to search through
search_base_dns = ["{{ grafana_ldap_servers_search_base_dns|join('", "') }}"]

## For Posix or LDAP setups that does not support member_of attribute you can define the below settings
### Please check grafana LDAP docs for examples
## group_search_filter = "(&(objectClass=posixGroup)(memberUid=%s))"
{% if grafana_ldap_servers_group_search_filter|default(false) %}
group_search_filter = "{{ grafana_ldap_servers_group_search_filter }}"
{% endif %}

# group_search_filter_user_attribute = "uid"
{% if grafana_ldap_servers_group_search_filter_user_attribute|default(false) %}
group_search_filter_user_attribute = "{{ grafana_ldap_servers_group_search_filter_user_attribute }}"
{% endif %}

# group_search_base_dns = ["ou=groups,dc=grafana,dc=org"]
{% if grafana_ldap_servers_group_search_base_dns|default(false) %}
group_search_base_dns = ["{{ grafana_ldap_servers_group_search_base_dns|join('", "') }}"]
{% endif %}

# Specify names of the ldap attributes your ldap uses
[servers.attributes]
name = "{{ grafana_ldap_servers_attributes_name }}"
surname = "{{ grafana_ldap_servers_attributes_surname }}"
username = "{{ grafana_ldap_servers_attributes_username }}"
member_of = "{{ grafana_ldap_servers_attributes_member_of }}"
email =  "{{ grafana_ldap_servers_attributes_email }}"

# Map ldap groups to grafana org roles
{% for group_mapping in grafana_ldap_servers_group_mappings %}
[[servers.group_mappings]]
group_dn = "{{ group_mapping.group_dn }}"
org_role = "{{ group_mapping.org_role }}"
{% if group_mapping.org_id|default(false) %}
org_id = {{ group_mapping.org_id }}
{% endif %}

{% endfor %}
