---
- name: Create plugin directory
  file:
    path:  "{{ grafana_plugins_dir }}"
    owner: "{{ grafana_user }}"
    group: "{{ grafana_group }}"
    state: directory

- name: Get list of installed grafana plugins
  shell: >
      grafana-cli plugins ls | grep '@' | sed 's/\(.*\) @.*/\1/'
  register: plugins

- name: Install grafana plugins
  shell: >
      grafana-cli plugins install "{{ item }}"
  with_items: "{{ grafana_plugins_install }}"
  when: item not in plugins.stdout_lines and item not in grafana_plugins_remove
  notify: Restart grafana

- name: Remove grafana plugins
  shell: >
      grafana-cli plugins remove "{{ item }}"
  with_items: "{{ grafana_plugins_remove }}"
  when: item in plugins.stdout_lines
  notify: Restart grafana

- name: Get versions of installed grafana plugins pre update
  shell: >
      grafana-cli plugins ls | grep '@'
  when: plugins.stdout_lines|count > 0
  register: versions_pre_update

- name: Update grafana plugins
  shell: >
      grafana-cli plugins update-all
  when: grafana_update_plugins and plugins.stdout_lines|count > 0
  ignore_errors: true

- name: Get versions of installed grafana plugins post update
  shell: >
      grafana-cli plugins ls | grep '@'
  when: grafana_update_plugins and plugins.stdout_lines|count > 0
  register: versions_post_update

- name: Trigger grafana restart if grafana plugins updated
  set_fact: restart_grafana=true
  when: plugins.stdout_lines|count > 0 and versions_pre_update.stdout != versions_post_update.stdout
  notify: Restart grafana
